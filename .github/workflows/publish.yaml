name: Publish

env:
  OTNET_NOLOGO: true

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "version.json"
      - "src/**/*.cs"
      - "src/**/*.csproj"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      - name: Read .NET Version
        shell: pwsh
        run: |
          $version = $(Get-Content .\global.json -Raw | ConvertFrom-Json).sdk.version.Substring(0,4) + "x"
          echo "NET_SDK_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with: { dotnet-version: "${{ env.NET_SDK_VERSION }}" }

      - name: Nerdbank.GitVersioning
        uses: dotnet/nbgv@v0.4.2
        id: nbgv
        with: { setAllVars: true }

      - name: Restore
        run: dotnet restore
      
      - name: Generate
        working-directory: tools/FontAwesome.Generator
        run: dotnet run -c Release --no-restore -- ./../../src/FontAwesome/

      - name: Pack
        working-directory: src/FontAwesome
        run: dotnet pack -c Release --no-restore

      - name: Publish on NuGet
        env:
          SOURCE_URL: https://api.nuget.org/v3/index.json
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push artifacts/**/*.nupkg --skip-duplicate -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }}

      - name: Github Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NBGV_SemVer2 }}
          release_name: ${{ env.NBGV_SemVer2 }}